plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql:42.7.3' // or latest
    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.6.3"
    compileOnly 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

test {
    useJUnitPlatform()
}

// Location of your frontend
def frontendDir = file("${projectDir}/../frontend")

// Add a task to build the React app
tasks.register('npmBuild', Exec) {
    workingDir = frontendDir
    commandLine = ["npm", "install"]
}

tasks.register('npmRunBuild', Exec) {
    dependsOn npmBuild
    workingDir = frontendDir
    commandLine = ["npm", "run", "build"]
}

tasks.register('cleanFrontend', Delete) {
    delete "${projectDir}/src/main/resources/static"
}
// Copy React build to Spring Boot static folder
tasks.register('copyFrontend', Copy) {
    dependsOn npmRunBuild
    dependsOn cleanFrontend

    from "${frontendDir}/dist"
    into "${projectDir}/src/main/resources/static"
}

tasks.register('target', Copy) {
    dependsOn bootJar
    from "${projectDir}/build/libs"
    into "${projectDir}/target/"
}